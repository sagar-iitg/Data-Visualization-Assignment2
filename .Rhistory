text(1.95, 880, count(male))
heights %>%
filter(sex=="Male") %>%
ggplot(aes(height)) +
geom_histogram(binwidth = 1, color = "black")+
labs(title="Height Distribution",x="Height(Inches)",y="Count")+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
ggplot(heights) + geom_histogram(aes(x =
height,col=sex),binwidth=0.9,fill="white")+
labs(title = "Height Distribution", x="Heights(Inches)", y="Count")+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
## proportion of male and female
prop.table(table(heights$sex))
##Gender Distribuition Plot
ggplot(data=heights)+geom_bar(mapping=aes(sex),color="red",fill=c("green","blue"))+
ggtitle("Gender Distribuition")+
theme(plot.title = element_text(hjust = 0.45))
## Height Distribution plot
ggplot(data=heights)+geom_density(mapping=aes(height),fill="blue",color="red")+
ggtitle("Height Distribuition")+
theme(plot.title = element_text(hjust = 0.45))+labs(x="height of students",y="density")
## No of students lies between 66 inches and 72 inches
x <- heights$height[heights$height>=66 & heights$height<=72]
students=length(x)/nrow(heights)
students*100
## Histogram plot of students
ggplot(data=heights)+
geom_histogram(mapping=aes(height),
breaks=seq(48,84,by=6),fill=c("green","green","green","blue","green","green"))+
ggtitle("Height of the Student")+
theme(plot.title = element_text(hjust = 0.45))
## No of students lies between 66 inches and 72 inches
x <- heights$height[heights$height>=66 & heights$height<=72]
students=length(x)/nrow(heights)
students*100
## Histogram plot of students
ggplot(data=heights)+
geom_histogram(mapping=aes(height),
breaks=seq(48,84,6),fill=c("green","green","green","blue","green","green"))+
ggtitle("Height of the Student")+
theme(plot.title = element_text(hjust = 0.45))
?seq
## No of students lies between 66 inches and 72 inches
x <- heights$height[heights$height>=66 & heights$height<=72]
students=length(x)/nrow(heights)
students*100
## Histogram plot of students
ggplot(data=heights)+
geom_histogram(mapping=aes(height),
breaks=seq(48,84,by=6),fill=c("green","green","green","blue","green","green"))+
ggtitle("Height of the Student")+
theme(plot.title = element_text(hjust = 0.45))
x <- heights$height[heights$height>=60 & heights$height<=75]
students=length(x)/nrow(heights)
students
x <- heights$height[heights$height>=60 & heights$height<=75]
students=length(x)/nrow(heights)
students
ggplot(data=heights)+geom_histogram(mapping=aes(height),bins=30,color="red",fill="blue")+
ggtitle(" Height of Student")+
theme(plot.title = element_text(hjust = 0.45))+
gghighlight(height>60 & height<75)
ggplot(data=heights)
ggplot(data=heights)+geom_histogram(aes(height))
ggplot(data=heights)+geom_histogram(aes(height),fill="blue",col="red")
ggplot(data=heights)+geom_histogram(aes(height),fill="blue",col="red")+gghighlight(heights$height>66 & heights$height<72)
ggplot(data=heights)+geom_histogram(aes(height),fill="blue",col="red")+gghighlight(heights$height>60 & heights$height<75)
heights %>%
filter(sex=="Male") %>%
ggplot(aes(height)) +
geom_histogram(binwidth = 1, color = "black")+
labs(title="Height Distribution",x="Height(Inches)",y="Count")+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
## No of students lies between 66 inches and 72 inches
x <- heights$height[heights$height>=66 & heights$height<=72]
students=length(x)/nrow(heights)
students*100
## Histogram plot of students
ggplot(data=heights)+
geom_histogram(mapping=aes(height),
breaks=seq(48,84,by=6),fill=c("green","green","green","blue","green","green"))+
ggtitle("Height of the Student")+
theme(plot.title = element_text(hjust = 0.45))
ggplot(data=heights)+
geom_histogram(mapping=aes(height))+
ggtitle("Height of the Student")+
theme(plot.title = element_text(hjust = 0.45))
ggplot(data=heights)+
geom_histogram(mapping=aes(height),bin=6)+
ggtitle("Height of the Student")+
theme(plot.title = element_text(hjust = 0.45))
ggplot(data=heights)+
geom_histogram(mapping=aes(height),bins=6)+
ggtitle("Height of the Student")+
theme(plot.title = element_text(hjust = 0.45))
ggplot(data=heights)+
geom_histogram(mapping=aes(height),bins=6)+
ggtitle("Height of the Student")+
theme(plot.title = element_text(hjust = 0.45))+ gghighlight(height>66 & height<72)
ggplot(data=heights)+
geom_histogram(mapping=aes(height),bins=6,fill="blue")+
ggtitle("Height of the Student")+
theme(plot.title = element_text(hjust = 0.45))+ gghighlight(height>66 & height<72)
ggplot(data=heights)+
geom_histogram(mapping=aes(height),bins=6,fill="blue",col="red")+
ggtitle("Height of the Student")+
theme(plot.title = element_text(hjust = 0.45))+ gghighlight(height>66 & height<72)
ggplot(data=heights)+
geom_histogram(mapping=aes(height),bins=6,fill="blue",col="red")+
ggtitle("Height of the Student")+
theme(plot.title = element_text(hjust = 0.45))+ gghighlight(height>66 & height<72)+xlim(48,84)
## No of students lies between 66 inches and 72 inches
x <- heights$height[heights$height>=66 & heights$height<=72]
students=length(x)/nrow(heights)
students*100
## Histogram plot of students
ggplot(data=heights)+
geom_histogram(mapping=aes(height),
breaks=seq(48,84,by=6),fill=c("green","green","green","blue","green","green"))+
ggtitle("Height of the Student")+
theme(plot.title = element_text(hjust = 0.45))
ggplot(data=heights)+
geom_histogram(mapping=aes(height),bins=6,fill="blue",col="red",breaks=seq(48,96,6))+
ggtitle("Height of the Student")+
theme(plot.title = element_text(hjust = 0.45))+ gghighlight(height>66 & height<72)
ggplot(data=heights)+
geom_histogram(mapping=aes(height),bins=6,fill="blue",col="red",breaks=seq(48,96,6))+
ggtitle("Height of the Student")+
theme(plot.title = element_text(hjust = 0.45))
ggplot(data=heights)+
geom_histogram(mapping=aes(height),bins=6,fill="blue",col="red",breaks=seq(48,96,6))+
ggtitle("Height of the Student")+
theme(plot.title = element_text(hjust = 0.45))+ gghighlight(height>=66 & height<=72)
ggplot(data=heights)+
geom_histogram(mapping=aes(height),bins=6,fill="blue",col="red",breaks=seq(48,84,6))+
ggtitle("Height of the Student")+
theme(plot.title = element_text(hjust = 0.45))+ gghighlight(height>=66 & height<=72)
ggplot(data=heights)+
geom_histogram(mapping=aes(height),bins=6,fill="blue",col="red",breaks=seq(48,84,6))+
ggtitle("Height of the Student")+
theme(plot.title = element_text(hjust = 0.45))+ gghighlight(height>=66 & height<=72)
ggplot(data=heights)+
geom_histogram(mapping=aes(height),fill="blue",col="red",breaks=seq(48,84,6))+
ggtitle("Height of the Student")+
theme(plot.title = element_text(hjust = 0.45))+ gghighlight(height>=66 & height<=72)
ggplot(data=heights)+
geom_histogram(mapping=aes(height),fill="blue",col="red",breaks=seq(48,84,6))+
ggtitle("Height of the Student")+
theme(plot.title = element_text(hjust = 0.45))+ gghighlight(height>=66 & height<=72)
male<-subset(heights,sex=="Male")
data<-with(density(male$height),data.frame(x,y))
ggplot(data,aes(x=x,y=y))+
geom_line()+
geom_area(aes(x=ifelse(x>66 & x<72,x,0)))+xlim(45,90)+
ggtitle("Height of the Student")+
theme(plot.title = element_text(hjust = 0.45))+labs(x="height",y="density")
## Density Plot
male<-subset(heights,sex=="Male")
data<-with(density(male$height),data.frame(x,y))
ggplot(data,aes(x=x,y=y))+
geom_line()+
geom_area(aes(x=ifelse(x>66 & x<72,x,0)))+xlim(45,90)+
ggtitle("Height of the Student")+
theme(plot.title = element_text(hjust = 0.45))+labs(x="height",y="density")
##Histogram Plot
ggplot(data=heights)+
geom_histogram(mapping=aes(height),
breaks=seq(48,84,by=6),fill=c("green","green","green","blue","green","green"))+
ggtitle("Height of the Student")+
theme(plot.title = element_text(hjust = 0.45))
dat <- with(density(male$height), data.frame(x, y))
ggplot(data = dat, mapping = aes(x = x, y = y)) +
geom_line()+
geom_area(mapping = aes(x = ifelse(x>66 & x< 72 , x, 0)), fill =
"#FF5733",alpha=0.85) +
xlim(45, 87)+
labs(x="Height (Inches)",y="Density",
title="Density Plot of males highlighting the height between 66 and 72inches")+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
heights %>%
mutate(highlight_flag = ifelse(height>66 & height<72, T, F)) %>%
ggplot(aes(x = height)) +
labs(x="Height", y="Count",
title="Histogram of height of male students greater than 66 and less than 72!")+
geom_histogram(aes(fill = highlight_flag),binwidth =
1,alpha=0.75,show.legend = FALSE) +
scale_fill_manual(values = c('#C5BFBD', '#FF5733'))+
labs(x="Height(Inches)",y="Density",
title="Histogram of males highlighting the height between 66 and 72
inches")+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
male_height=filter(heights,sex=="Male")
actual_plot<- ggplot(male_height, aes(x=height)) +
geom_density(color="black")
x <- seq(min(male_height$height),
max(male_height$height), length.out=800)
df <- with(actual_plot,
data.frame(x = x, y = dnorm(x, mean(male_height$height), sd(male_height$height))))
actual_plot + geom_line(data = df, aes(x = x, y = y), color = "red")+labs(x ="height")+
ggtitle("red is standard normal and black is actual data")+
theme(plot.title = element_text(hjust = 0.45))
values_lies_within= filter(male_height,abs(height-mean(male_height$height)) <= 1.5*sd(male_height$height))
xy<-count(values_lies_within)*100/count(male_height)
male_height=filter(heights,sex=="Male")
actual_plot<- ggplot(male_height, aes(x=height)) +
geom_density(color="black")
x <- seq(min(male_height$height),
max(male_height$height), length.out=800)
df <- with(actual_plot,
data.frame(x = x, y = dnorm(x, mean(male_height$height), sd(male_height$height))))
actual_plot + geom_line(data = df, aes(x = x, y = y), color = "red")+labs(x ="height")+
ggtitle("red is standard normal and black is actual data")+
theme(plot.title = element_text(hjust = 0.45))
values_lies_within= filter(male_height,abs(height-mean(male_height$height)) <= 1.5*sd(male_height$height))
xy<-count(values_lies_within)*100/count(male_height)
male_height=filter(heights,sex=="Male")
actual_plot<- ggplot(male_height, aes(x=height)) +
geom_density(color="black")
x <- seq(min(male_height$height),
max(male_height$height), length.out=800)
df <- with(actual_plot,
data.frame(x = x, y = dnorm(x, mean(male_height$height), sd(male_height$height))))
actual_plot + geom_line(data = df, aes(x = x, y = y), color = "red")+labs(x ="height")+
ggtitle("red is standard normal and black is actual data")+
theme(plot.title = element_text(hjust = 0.45))
#
# values_lies_within= filter(male_height,abs(height-mean(male_height$height)) <= 1.5*sd(male_height$height))
#
# xy<-count(values_lies_within)*100/count(male_height)
#
# xy
values_lies_within= filter(male_height,abs(height-mean(male_height$height)) <= 1.5*sd(male_height$height))
xy<-count(values_lies_within)*100/count(male_height)
values_lies_within
count(values_lies_within)
count(values_lies_within)
count(male_height)
xy<-count(values_lies_within)*100/count(male_height)
male_height=filter(heights,sex=="Male")
count(male_height)
xy<-count(values_lies_within)/count(male_height)
xy<-count(values_lies_within)/count(male_height)
male_height=filter(heights,sex=="Male")
actual_plot<- ggplot(male_height, aes(x=height)) +
geom_density(color="black")
x <- seq(min(male_height$height),
max(male_height$height), length.out=800)
df <- with(actual_plot,
data.frame(x = x, y = dnorm(x, mean(male_height$height), sd(male_height$height))))
actual_plot + geom_line(data = df, aes(x = x, y = y), color = "red")+labs(x ="height")+
ggtitle("red is standard normal and black is actual data")+
theme(plot.title = element_text(hjust = 0.45))
values_lies_within= filter(male_height,abs(height-mean(male_height$height)) <= 1.5*sd(male_height$height))
xy<-count(values_lies_within)*100/count(male_height)
actual_plot<- ggplot(male_height, aes(x=height)) +
geom_density(color="black")
z<-filter(male,(height>=(male.mean-1.5)& height<=(male.mean+1.5)));
index <- heights$sex == "Male"
x <- heights$height[index]
male.mean <- mean(x)
male.sd <- sd(x)
avg<-c(average = male.mean, sd = male.sd);
norm_dist <- data.frame(x = seq(-4, 4, len=50)*male.sd + male.mean) %>%
mutate(density = dnorm(x, male.mean, male.sd))
heights %>% filter(sex == "Male") %>% ggplot(aes(height)) +
geom_density(fill="#FF5733") +
geom_line(aes(x, density),  data = norm_dist, lwd=1.25)+
labs(title="Normal Approximation to Male heights",y="Density",
x = "Height(Inches)")+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
male_height=filter(heights,sex=="Male")
male_height
actual_plot<- ggplot(male_height, aes(x=height)) +
geom_density(color="black")
actual_plot
male_height=filter(heights,sex=="Male")
actual_plot<- ggplot(male_height, aes(x=height)) +
geom_density(color="black")
x <- seq(min(male_height$height),
max(male_height$height), length.out=800)
df <- with(actual_plot,
data.frame(x = x, y = dnorm(x, mean(male_height$height), sd(male_height$height))))
actual_plot + geom_line(data = df, aes(x = x, y = y), color = "red")+labs(x ="height")+
ggtitle("red is standard normal and black is actual data")+
theme(plot.title = element_text(hjust = 0.45))
values_lies_within= filter(male_height,abs(height-mean(male_height$height)) <= 1.5*sd(male_height$height))
count(values_lies_within)
count(male_height)
# xy<-count(values_lies_within)*100/count(male_height)
#
#  xy
actual_plot<- ggplot(male_height, aes(x=height)) +
geom_density(color="black",fill=red)
actual_plot<- ggplot(male_height, aes(x=height)) +
geom_density(color="black",fill="red")
actual_plot
?seq
?seq
seq(1,10,length.out = 4)
seq(1,10,length.out = 4)
seq(1,10,length.out = 5)
seq(1,10,by=1,length.out = 5)
seq(1,10,by=1,length.out = 5)
max(male_height$height)
min(male_height$height)
min(male_height$height)
length(male_height)
dim(male_height)
p3<-
male_data %>%
ggplot() +
geom_density(aes(height))
library(ggplot2)
library(dslabs)
library(dplyr)
data("heights")
heights %>%
ggplot() +
geom_bar(aes(sex)) +
ggtitle("GENDER DISTRIBUTION")
his <- hist(heights$height, main = "HEIGHTS DISTRIBUTION", xlab= "height")
table(heights$sex)
max_c=max(his$counts)
p <-
heights %>%
ggplot() +
geom_density(aes(height))
d <- ggplot_build(p)$data[[1]]
p <- p + geom_area(data = subset(d, x >= 66 & x <=72), aes(x=x, y=y), fill="grey")
z <-  p+ggtitle("SMOOTH DENSITY CURVE OF STUDENTS' HEIGHTS",
subtitle = " (HIGHLIGHTED BETWEEN 66 AND 72 INCHES)")
z
sum_66_72 <-filter(heights, heights$height>=66 & heights$height<=72)
per <- (dim(sum_66_72)[1]/1050)*100
cat("The percentage of students between 66 and 72 is:",per)
range_point <- qnorm(0.95, mean = mean(heights$height), sd = sd(heights$height))
range_point
p1 <-
heights %>%
ggplot() +
geom_density(aes(height))
d1 <- ggplot_build(p1)$data[[1]]
p1 <- p1 + geom_area(data = subset(d1, x < range_point), aes(x=x, y=y), fill="gray")
p1 <- p1 + ggtitle("RANGE OF HEIGHT CONTAINING 95% OF THE DATA")
p1
male_data <-
heights %>%
filter(heights$sex == "Male")
h=hist(male_data$height)
c=max(h$counts)
p2 <-
heights %>%
filter(heights$sex == "Male") %>%
ggplot() +
geom_density(aes(height))
d2 <- ggplot_build(p2)$data[[1]]
p2 <- p2 + geom_area(data = subset(d2, x >=66 & x<=72), aes(x=x, y=y), fill="gray")
p2 <- p2 + ggtitle("SMOOTH DENSITY CURVE OF MALE STUDENTS' HEIGHTS",
subtitle = " (HIGHLIGHTED BETWEEN 66 AND 72 INCHES)")
p2
mean_male_data <- mean(male_data$height)
sd_male_data <- sd(male_data$height)
density <- dnorm(male_data$height, mean = mean_male_data, sd = sd_male_data)
plot(male_data$height,density)
lines(density(male_data$height, bw=1))
p_right = pnorm(mean_male_data + 1.5*sd_male_data, mean_male_data, sd_male_data)
p_left = pnorm(mean_male_data - 1.5*sd_male_data, mean_male_data, sd_male_data)
p_right - p_left
p3<-
male_data %>%
ggplot() +
geom_density(aes(height))
d3 <- ggplot_build(p3)$data[[1]]
p3 <- p3 + geom_area(data = subset(d2, x >=mean_male_data - 1.5*sd_male_data &
x<=mean_male_data + 1.5*sd_male_data),
aes(x=x, y=y), fill="gray")
p3 <- p3 + ggtitle("SMOOTH DENSITY CURVE OF MALE STUDENTS' HEIGHTS",
subtitle = " (VALUES LYING WITHIN 1.5 S.D. OF THE MEAN)")
p3
?geom_area
qqnorm(male$height)
qqline(male$height, col = '#FF5733')
qqnorm(male$height)
qqline(male$height, col = '#FF5733')
qqnorm(male$height)
qqline(male$height, col = '#FF5733')
qqnorm(male$height)
qqline(male$height, col = '#FF5733')
qqnorm(male$height)
qqline(male$height, col = '#FF5733')
qqnorm(male$height)
qqline(male$height, col = 'red')
## QQ plot
heights %>%
filter(sex=="Male") %>%
ggplot(aes(sample = scale(height))) +
geom_qq() +
geom_abline()+
ggtitle("Normal Q-Q Plot") +
theme(plot.title = element_text(hjust = 0.45))
filter(heights,sex=="Male") %>%
ggplot(aes(sample = scale(height))) +
geom_qq() +
geom_abline()+
ggtitle("Normal Q-Q Plot") +
theme(plot.title = element_text(hjust = 0.45))
filter(heights,sex=="Male") %>%
ggplot(aes(sample = scale(height))) + geom_qq() +
ggtitle("Normal Q-Q Plot") +
theme(plot.title = element_text(hjust = 0.45))
filter(heights,sex=="Male") %>%
ggplot(aes(sample = scale(height))) + geom_qq() +
geom_abline()+
ggtitle("Normal Q-Q Plot") +
theme(plot.title = element_text(hjust = 0.45))
filter(heights,sex=="Male") %>%
ggplot(aes(sample = scale(height))) + geom_qq() +
geom_abline(col="red")+
ggtitle("Normal Q-Q Plot") +
theme(plot.title = element_text(hjust = 0.45))
filter(heights,sex=="Male") %>%
ggplot() + geom_qq() +
geom_abline(col="red")+
ggtitle("Normal Q-Q Plot") +
theme(plot.title = element_text(hjust = 0.45))
filter(heights,sex=="Male") %>%
ggplot(aes(sample = scale(height))) + geom_qq() +
geom_abline(col="red")+
ggtitle("Normal Q-Q Plot") +
theme(plot.title = element_text(hjust = 0.45))
filter(heights,sex=="Male") %>%
ggplot(aes(scale(height))) + geom_qq() +
geom_abline(col="red")+
ggtitle("Normal Q-Q Plot") +
theme(plot.title = element_text(hjust = 0.45))
params <- heights %>% filter(sex=="Male") %>%
summarize(mean = mean(height), sd = sd(height))
params <- heights %>% filter(sex=="Male") %>%
summarize(mean = mean(height), sd = sd(height))
heights %>% filter(sex=="Male") %>%
ggplot(aes(sample = height)) +
geom_qq(dparams = params) +
geom_abline()
params
nnorm(100)
?dnorm
rnorm(100)
?rlm
ggplot(data=gapminder,mapping = aes(x=log(gdpPercap,y=lifeExp)))
ggplot(data=gapminder,mapping = aes(x=log(gdpPercap,y=lifeExp)))+
geom_point()
ggplot(data=gapminder,mapping = aes(x=log(gdpPercap,y=lifeExp)))+
geom_point()
ggplot(data=gapminder))+
geom_point(mapping = aes(x=log(gdpPercap,y=lifeExp))
library("ggplot2")
ggplot(data=gapminder))+
geom_point(mapping = aes(x=log(gdpPercap,y=lifeExp))
ggplot(data=gapminder)+geom_point(aes(gdpPercap,lifeExp))
ggplot(data=gapminder)+geom_point(aes(x=gdpPercap,y=lifeExp))
ggplot(data=gapminder))+
geom_point(mapping = aes(x=log(gdpPercap),y=lifeExp))
ggplot(data=gapminder))+
geom_point(mapping = aes(x=log(gdpPercap),y=lifeExp))
ggplot(data=gapminder)+geom_point(aes(x=log(gdpPercap),y=lifeExp))
ggplot(data=gapminder,mapping=aes(x=log(gdpPercap),y=lifeExp))+
geom_point()
ggplot(data=gapminder,mapping=aes(x=log(gdpPercap),y=lifeExp))+
geom_point()+geom_smooth()
ggplot(data=gapminder,mapping=aes(x=log(gdpPercap),y=lifeExp))+
geom_point()+geom_smooth()
ggplot(data=gapminder,mapping=aes(x=log(gdpPercap),y=lifeExp))+
geom_point()+
geom_smooth(method="lm",formula = y~poly(x,3),show.legend = TRUE,aes(colour="lm"),se=FALSE)
library("gapminder")
library("ggplot2")
library("MASS")
#data.gapminder <- data.frame(gapminder)
ggplot(data=gapminder,mapping=aes(x=log(gdpPercap),y=lifeExp))+
geom_point()+
geom_smooth(method="lm",formula = y~poly(x,3),show.legend = TRUE,aes(colour="lm"),se=FALSE)+
geom_smooth(method="glm",show.legend = TRUE,aes(colour="glm"),se=FALSE)+
geom_smooth(method="gam",show.legend = TRUE,formula=y~log(x),aes(colour="gam"),se=FALSE)+
geom_smooth(method="loess",show.legend = TRUE,aes(colour="loess"),se=FALSE)+
geom_smooth(method="rlm",show.legend=TRUE,aes(colour="rlm"),formula = y~poly(x,2),se=FALSE)+
scale_colour_manual(name="legend",values = c("blue","red","green","orange","cyan"))+
labs(title="Demo of different smoothing methods")
ggplot(data=gapminder)+geom_point(aes(x=log(gdpPercap),y=lifeExp))
